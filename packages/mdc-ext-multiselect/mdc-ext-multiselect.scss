//
// Copyright 2017 Google Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

@import "./functions";
@import "./mixins";
@import "./variables";
@import "@material/animation/variables";
@import "@material/animation/functions";
@import "@material/elevation/mixins";
@import "@material/ripple/common";
@import "@material/ripple/mixins";
@import "@material/rtl/mixins";
@import "@material/theme/variables";
@import "@material/theme/mixins";
@import "@material/typography/variables";
@import "@material/typography/mixins";
@import "./bottom-line/mdc-ext-multiselect-bottom-line";
@import "./label/mdc-ext-multiselect-label";


@function mdc-ext-multiselect-transition($property) {
  @return #{$property} 180ms $mdc-animation-standard-curve-timing-function;
}

@mixin mdc-ext-multiselect-dd-arrow-svg-bg_($fill-hex-number: 000000, $opacity: .54) {
  background-image: url(data:image/svg+xml,%3Csvg%20width%3D%2210px%22%20height%3D%225px%22%20viewBox%3D%227%2010%2010%205%22%20version%3D%221.1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%3E%0A%20%20%20%20%3Cpolygon%20id%3D%22Shape%22%20stroke%3D%22none%22%20fill%3D%22%23#{$fill-hex-number}%22%20fill-rule%3D%22evenodd%22%20opacity%3D%22#{$opacity}%22%20points%3D%227%2010%2012%2015%2017%2010%22%3E%3C%2Fpolygon%3E%0A%3C%2Fsvg%3E);
}

// postcss-bem-linter: define multiselect
.mdc-ext-multiselect {
  $dd-arrow-padding: 18px;

  @include mdc-ext-multiselect-bottom-line-color($mdc-ext-multiselect-underline-on-light-idle);
  @include mdc-ext-multiselect-hover-bottom-line-color($mdc-ext-multiselect-underline-on-light);
  @include mdc-ext-multiselect-focused-bottom-line-color(primary);
  @include mdc-ext-multiselect-ink-color(text-primary-on-light);
  @include mdc-ext-multiselect-label-color($mdc-ext-multiselect-light-label);

  display: inline-flex;
  position: relative;
  align-items: flex-end;
  box-sizing: border-box;
  height: 48px;
  margin-bottom: 8px;
  margin-top: 16px;

  &__combobox {
    @include mdc-theme-prop(color, text-primary-on-light);
    @include mdc-typography-base;

    display: inline-block;
    position: relative;
    background: none;
    background-repeat: no-repeat;
    background-position: right center;
    border: none;
    border-bottom: 1px solid $mdc-ext-multiselect-underline-on-light-idle;
    box-sizing: border-box;
    flex: 1 0 auto;
    min-width: 100px;
    padding: 0 #{$dd-arrow-padding} 8px;
    width: 179px;

    @include mdc-ext-multiselect-dd-arrow-svg-bg_;
    @include mdc-rtl-reflexive-box(padding, right, $dd-arrow-padding);
    // We use only a subset of the MDC typography values here as changing things such as line-height
    // affects how the labels are transformed.
    @each $prop in (letter-spacing) {
      #{$prop}: map-get(map-get($mdc-typography-styles, body1), $prop);
    }

    @include mdc-rtl {
      background-position: left center;
    }

    &:hover {
      border-color: $mdc-ext-multiselect-underline-on-light;
    }
  }

  &__select {
    appearance: none;
    display: none;
    border: none;
    border-radius: 0;
    background: none;
    background-repeat: no-repeat;
    background-position: right center;
    padding: 0 #{$dd-arrow-padding} 8px;

    @include mdc-ext-multiselect-dd-arrow-svg-bg_;

    @include mdc-theme-prop(color, text-primary-on-light);
    @include mdc-typography-base;
    @include mdc-rtl-reflexive-box(padding, right, $dd-arrow-padding);
    font-size: inherit;

    &:focus {
      @include mdc-theme-prop(border-bottom-color, primary);

      outline: none;
      background-color: rgba(black, .06);
    }
  }

  &__display {
    display: flex;
    flex: 1;
    flex-wrap: nowrap;
    width: 100%;

    .mdc-ext-multiselect__input {
      border-style: none;
      background-color: transparent;
      display: inline;
      flex-basis: 5px;
      flex-grow: 1;
      min-width: 20px;
      outline: none;
      overflow-x: hidden;
      padding: 0 0 0 2px;
      width: auto;

      &::placeholder {
        @include mdc-theme-prop(color, text-hint-on-light);
      }
    }

    .mdc-ext-multiselect__option {
      flex-grow: 0;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
    }
  }

  &--upgraded {
    .mdc-ext-multiselect__label {
      pointer-events: none;
    }
  }

  &--focused {
    @include mdc-ext-multiselect-label-color(primary);
  }

  &__list {
    display: none;
    left: 0;
    position: absolute;
    top: 0;
    background-color: white;
    border: 1px solid black;
    box-sizing: border-box;
    max-width: calc(100vw - 32px);
    max-height: calc(100vh - 104px);
    overflow-x: hidden;
    overflow-y: overlay;
    padding: 0;
    transform-origin: left top;
    white-space: nowrap;
    z-index: 3;
    will-change: transform, opacity;

    // stylelint-disable plugin/selector-bem-pattern
    @include mdc-rtl(".mdc-ext-multiselect") {
      right: 0;
      transform-origin: right top;
    }
    // stylelint-enable plugin/selector-bem-pattern

    @include mdc-elevation(2);

    &--open {
      display: block;
      transform: scale(1);
      opacity: 1;
    }

    /* stylelint-disable plugin/selector-bem-pattern */
    .mdc-list {
      margin: 0px 0px;
      padding: 4px 0;
    }

    .mdc-list-item {
      @include mdc-typography(body1);
      @include mdc-theme-prop(color, text-secondary-on-light);
      outline: none;
      padding: 0 16px;
      text-decoration: none;
      user-select: none;

      &__nomatch {
        visibility: hidden;
        display: none;
      }

      &--selected:not(.mdc-list-item:active) {
        @include mdc-states;
        @include mdc-states-selected(primary);
      }
    }
  }
}

.mdc-ext-multiselect--disabled,
.mdc-ext-multiselect[aria-disabled] {
  @include mdc-theme-prop(color, text-disabled-on-light);

  cursor: default;
  pointer-events: none;

  .mdc-ext-multiselect__combobox-background {
    border-bottom: 1px dotted $mdc-ext-multiselect-disabled-border-on-light;
  }

  // stylelint-disable plugin/selector-bem-pattern
  .mdc-ext-multiselect__combobox,
  .mdc-ext-multiselect__combobox-background,
  .mdc-ext-multiselect__input,
  .mdc-ext-multiselect__label {
    @include mdc-theme-prop(color, text-disabled-on-light);
  }
  // stylelint-enable plugin/selector-bem-pattern
}

// Graceful degradation for css-only inputs

.mdc-ext-multiselect {
  &:not(.mdc-ext-multiselect--upgraded) &__combobox {
    display: none;
  }

  &:not(.mdc-ext-multiselect--upgraded) .mdc-ext-multiselect__select {
    display: block;

    transition: mdc-ext-multiselect-transition(border-bottom-color);
    border-bottom: 1px solid $mdc-ext-multiselect-divider-on-light;

    &:focus {
      @include mdc-theme-prop(border-color, primary);
      outline: none;
      background-color: rgba(black, .06);
    }

    &:disabled {
      @include mdc-theme-prop(color, text-disabled-on-light);

      border-style: dotted;
      border-color: $mdc-ext-multiselect-disabled-border-on-light;
    }

    &:invalid:not(:focus) {
      border-color: $mdc-ext-multiselect-error-on-light;
    }
  }
}

// postcss-bem-linter: end
